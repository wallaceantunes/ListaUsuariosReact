[{"C:\\projetos\\desafio-zukk\\src\\index.js":"1","C:\\projetos\\desafio-zukk\\src\\reportWebVitals.js":"2","C:\\projetos\\desafio-zukk\\src\\ui\\screens\\loginScreen\\Login.js":"3","C:\\projetos\\desafio-zukk\\src\\ui\\screens\\listScreen\\List.js":"4","C:\\projetos\\desafio-zukk\\src\\ui\\screens\\createScreen\\Create.js":"5","C:\\projetos\\desafio-zukk\\src\\router.js":"6","C:\\projetos\\desafio-zukk\\src\\api\\loginApi.js":"7","C:\\projetos\\desafio-zukk\\src\\config\\config.js":"8","C:\\projetos\\desafio-zukk\\src\\store\\store.js":"9","C:\\projetos\\desafio-zukk\\src\\ui\\components\\privateRoute.js":"10","C:\\projetos\\desafio-zukk\\src\\api\\clientApi.js":"11","C:\\projetos\\desafio-zukk\\src\\ui\\screens\\editScreen\\Edit.js":"12","C:\\projetos\\desafio-zukk\\src\\api\\cepApi.js":"13","C:\\projetos\\desafio-zukk\\src\\ui\\components\\map.js":"14"},{"size":740,"mtime":1611259599719,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2142,"mtime":1611251779999,"results":"18","hashOfConfig":"16"},{"size":3078,"mtime":1611260951802,"results":"19","hashOfConfig":"16"},{"size":6073,"mtime":1611262940473,"results":"20","hashOfConfig":"16"},{"size":836,"mtime":1611253861409,"results":"21","hashOfConfig":"16"},{"size":206,"mtime":1611241350401,"results":"22","hashOfConfig":"16"},{"size":47,"mtime":1611238428782,"results":"23","hashOfConfig":"16"},{"size":394,"mtime":1611250280751,"results":"24","hashOfConfig":"16"},{"size":409,"mtime":1611248310672,"results":"25","hashOfConfig":"16"},{"size":843,"mtime":1611254020519,"results":"26","hashOfConfig":"16"},{"size":6553,"mtime":1611262934312,"results":"27","hashOfConfig":"16"},{"size":256,"mtime":1611256510640,"results":"28","hashOfConfig":"16"},{"size":718,"mtime":1611260812477,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"tiyc25",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"C:\\projetos\\desafio-zukk\\src\\index.js",[],["61","62"],"C:\\projetos\\desafio-zukk\\src\\reportWebVitals.js",[],"C:\\projetos\\desafio-zukk\\src\\ui\\screens\\loginScreen\\Login.js",[],"C:\\projetos\\desafio-zukk\\src\\ui\\screens\\listScreen\\List.js",["63","64","65"],"import React, { useEffect, useState } from 'react';\r\nimport './List.css';\r\nimport { Navbar, Container, Col, Table, Button, Card, Form } from 'react-bootstrap';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport { getClients, deleteClient } from '../../../api/clientApi'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction List() {\r\n    const history = useHistory()\r\n    const [show, setShow] = useState(false)\r\n    const [clients, setClients] = useState([])\r\n    const getC = async () => {\r\n        try {\r\n            const resp = await getClients()\r\n            setClients(resp.data.clients)\r\n        } catch (error) {\r\n            setShow(true)\r\n        }\r\n    }\r\n\r\n    const deleteC = async (id) => {\r\n        try {\r\n            await deleteClient(id)\r\n            getC()\r\n        } catch (error) {\r\n            setShow(true)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getC()\r\n    }, [])\r\n    return (\r\n        <div className=\"list\">\r\n            <Navbar className=\"border-navbar\" bg=\"light\">\r\n                <Navbar.Brand>\r\n                    <img src=\"zukk-logo.png\" alt=\"logo\" />\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n            <Container>\r\n                <Table responsive bordered variant=\"light\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Email</th>\r\n                            <th>Telefone</th>\r\n                            <th>Endereço</th>\r\n                            <th>Bairro</th>\r\n                            <th>Cidade - UF</th>\r\n                            <th className=\"text-center\" colSpan=\"2\">Ações</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {clients.map((client) =>( <tr key={client.id}>\r\n                            <td>{client.name}</td>\r\n                            <td>{client.email}</td>\r\n                            <td>{client.phone}</td>\r\n                            <td>{client.address.address}</td>\r\n                            <td>{client.address.neighborhood}</td>\r\n                            <td>{client.address.city} - {client.address.uf.toUpperCase()}</td>\r\n                            <td><Button variant=\"warning\" onClick={() => history.push({pathname: '/editar', state: {client}})}>Editar</Button></td>\r\n                            <td><Button variant=\"danger\" onClick={() => deleteC(client.id)}>Remover</Button></td>\r\n                        </tr>))}\r\n                    </tbody>\r\n                </Table>\r\n                <div className=\"btn-footer\">\r\n                    <Button className=\"btn-round\" variant=\"primary\" size=\"lg\" onClick={() => history.push('/cadastrar')}>+</Button>\r\n                </div>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"Error\"\r\n                text=\"Erro interno\"\r\n                confirmButtonColor=\"#d33\"\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","C:\\projetos\\desafio-zukk\\src\\ui\\screens\\createScreen\\Create.js",[],"C:\\projetos\\desafio-zukk\\src\\router.js",[],"C:\\projetos\\desafio-zukk\\src\\api\\loginApi.js",[],"C:\\projetos\\desafio-zukk\\src\\config\\config.js",[],"C:\\projetos\\desafio-zukk\\src\\store\\store.js",[],"C:\\projetos\\desafio-zukk\\src\\ui\\components\\privateRoute.js",[],"C:\\projetos\\desafio-zukk\\src\\api\\clientApi.js",[],"C:\\projetos\\desafio-zukk\\src\\ui\\screens\\editScreen\\Edit.js",["66"],"C:\\projetos\\desafio-zukk\\src\\api\\cepApi.js",[],"C:\\projetos\\desafio-zukk\\src\\ui\\components\\map.js",["67","68"],"import React, { useEffect, useRef } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\nconst L = window.L\r\nfunction Map({position}) {\r\n    const mapRef = useRef()\r\n    return (\r\n        <MapContainer ref={mapRef} className=\"map\" center={L.latLng(position[0], position[1])} bounds={L.latLngBounds(position)} zoom={2} scrollWheelZoom={false}>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={position}>\r\n            </Marker>\r\n        </MapContainer>\r\n    )\r\n}\r\n\r\nexport default Map;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":29,"nodeType":"75","messageId":"76","endLine":3,"endColumn":32},{"ruleId":"73","severity":1,"message":"77","line":3,"column":49,"nodeType":"75","messageId":"76","endLine":3,"endColumn":53},{"ruleId":"73","severity":1,"message":"78","line":3,"column":55,"nodeType":"75","messageId":"76","endLine":3,"endColumn":59},{"ruleId":"79","severity":1,"message":"80","line":31,"column":8,"nodeType":"81","endLine":31,"endColumn":10,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"83","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"84","line":2,"column":43,"nodeType":"75","messageId":"76","endLine":2,"endColumn":48},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.location.state.client.address.address', 'props.location.state.client.address.city', 'props.location.state.client.address.neighborhood', 'props.location.state.client.address.uf', 'props.location.state.client.email', 'props.location.state.client.name', and 'props.location.state.client.phone'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.location.state.client.name', you can also switch to useReducer instead of useState and read 'props.location.state.client.name' in the reducer.","ArrayExpression",["87"],"'useEffect' is defined but never used.","'Popup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [props.location.state.client.address.address, props.location.state.client.address.city, props.location.state.client.address.neighborhood, props.location.state.client.address.uf, props.location.state.client.email, props.location.state.client.name, props.location.state.client.phone]",{"range":"90","text":"91"},[1376,1378],"[props.location.state.client.address.address, props.location.state.client.address.city, props.location.state.client.address.neighborhood, props.location.state.client.address.uf, props.location.state.client.email, props.location.state.client.name, props.location.state.client.phone]"]